// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: refresh_tokens.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createRefreshToken = `-- name: CreateRefreshToken :exec
INSERT INTO refresh_tokens (token, user_id, created_at, updated_at, expires_at)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5
)
`

type CreateRefreshTokenParams struct {
	Token     string
	UserID    uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	ExpiresAt time.Time
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) error {
	_, err := q.db.ExecContext(ctx, createRefreshToken,
		arg.Token,
		arg.UserID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.ExpiresAt,
	)
	return err
}

const getRefreshTokenInfo = `-- name: GetRefreshTokenInfo :one
SELECT token, user_id, created_at, updated_at, expires_at, revoked_at FROM refresh_tokens
WHERE token = $1
`

type GetRefreshTokenInfoRow struct {
	Token     string
	UserID    uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	ExpiresAt time.Time
	RevokedAt sql.NullTime
}

func (q *Queries) GetRefreshTokenInfo(ctx context.Context, token string) (GetRefreshTokenInfoRow, error) {
	row := q.db.QueryRowContext(ctx, getRefreshTokenInfo, token)
	var i GetRefreshTokenInfoRow
	err := row.Scan(
		&i.Token,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
